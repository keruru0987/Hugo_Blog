<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>技术 on Eric 个人博客</title>
        <link>https://ericrzhu.com/categories/%E6%8A%80%E6%9C%AF/</link>
        <description>Recent content in 技术 on Eric 个人博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 16 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ericrzhu.com/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>气候相关Claim 自动真实性检测</title>
        <link>https://ericrzhu.com/p/%E6%B0%94%E5%80%99%E7%9B%B8%E5%85%B3claim-%E8%87%AA%E5%8A%A8%E7%9C%9F%E5%AE%9E%E6%80%A7%E6%A3%80%E6%B5%8B/</link>
        <pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate>
        
        <guid>https://ericrzhu.com/p/%E6%B0%94%E5%80%99%E7%9B%B8%E5%85%B3claim-%E8%87%AA%E5%8A%A8%E7%9C%9F%E5%AE%9E%E6%80%A7%E6%A3%80%E6%B5%8B/</guid>
        <description>&lt;p&gt;&lt;code&gt;GitHub URL:&lt;/code&gt; &lt;a class=&#34;link&#34; href=&#34;https://github.com/keruru0987/Automated-Fact-Checking&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/keruru0987/Automated-Fact-Checking&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;项目背景&#34;&gt;项目背景&lt;/h2&gt;
&lt;p&gt;气候问题是目前非常被关注的一大类问题。目前在网上有很多关于气候问题方面的言论，其中有的言论是捏造的。这些不真实的言论可能会带来一些影响，例如说引起社会的恐慌。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>现在开始在这里更新啦</title>
        <link>https://ericrzhu.com/p/%E7%8E%B0%E5%9C%A8%E5%BC%80%E5%A7%8B%E5%9C%A8%E8%BF%99%E9%87%8C%E6%9B%B4%E6%96%B0%E5%95%A6/</link>
        <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>https://ericrzhu.com/p/%E7%8E%B0%E5%9C%A8%E5%BC%80%E5%A7%8B%E5%9C%A8%E8%BF%99%E9%87%8C%E6%9B%B4%E6%96%B0%E5%95%A6/</guid>
        <description>&lt;h2 id=&#34;更新说明&#34;&gt;更新说明&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;注：如果本网站加载很慢或失败，可尝试挂VPN来解决。&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;更换框架&#34;&gt;更换框架&lt;/h3&gt;
&lt;p&gt;原来博客&lt;code&gt;http://erichu.top&lt;/code&gt;采用的是&lt;code&gt;Gridea&lt;/code&gt;+&lt;code&gt;Github Page&lt;/code&gt;的实现方式，用这种方法去搭建个人博客非常的简单，拥有可视化的界面，基本上只要写完博客后直接同步到GitHub上就行了。但是使用这种方法的弊端也有很多，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以选择的主题样式很少而且bug很多&lt;/li&gt;
&lt;li&gt;不支持https格式，而在某些浏览器中会强制使用https头，导致样式整个混乱。即使浏览器能够正确使用http进行访问，也会提示与此站点之间的连接不安全，显得十分不专业。&lt;/li&gt;
&lt;li&gt;可以自由定制的部分很少。&lt;code&gt;Gridea&lt;/code&gt;只提供了少部分可以自由定制的内容，这也是简单的部署方法的必然结果。在熟悉了网页的开发之后，我自然是不满足于那些东西的。&lt;/li&gt;
&lt;li&gt;同步的时候经常报错。应该是因为GitHub被墙的原因，但是有时候挂VPN之后能够进行GitHub提交但还是无法完成同步，这在急着进行更新提交的时候真的会很让人抓狂。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Gridea&lt;/code&gt;虽然有我如上所属的一些小缺点，但不可否认的是，其易上手的功能很适合于刚接触网站开发部署的小白 &lt;del&gt;（比如一年前的我）&lt;/del&gt;。通过之前那次的部署经验和毕业设计中前端开发的经验（我的毕业设计中我也专门学了前端&lt;code&gt;Flask&lt;/code&gt;框架并且使用国外的免费服务器&lt;code&gt;HeroKu&lt;/code&gt;部署了网站，&lt;a class=&#34;link&#34; href=&#34;https://girecommend.herokuapp.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;点此前往&lt;/code&gt;&lt;/a&gt;，之后我应该也会写个文档出来，目前由于免费服务器的限制无法部署比较好的算法，说不定之后还会继续维护一下），我就打算尝试一下新的更加复杂一些的框架。目前这个博客的实现是&lt;code&gt;Hugo&lt;/code&gt;+&lt;code&gt;stack-theme&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;在整体使用逻辑上和&lt;code&gt;Gridea&lt;/code&gt;并无太大的区别，都是会帮助你你生成public (output)文件然后推送到&lt;code&gt;GitHub&lt;/code&gt;中，通过项目仓库关联的&lt;code&gt;GitHub Page&lt;/code&gt;完成网络的部署，然后再通过&lt;code&gt;CNAME&lt;/code&gt;来映射到自己的域名。区别主要在于&lt;code&gt;Hugo&lt;/code&gt;主要是通过命令行来进行操作而且其中的配置和结构都需要自己来进行设置，不过好在之前有基础，很快也就搞定了&lt;code&gt;Hugo&lt;/code&gt;的配置。顺带一提，&lt;code&gt;Hugo&lt;/code&gt;是支持https部署的，这总算是解决了困扰我一年的问题。&lt;/p&gt;
&lt;h3 id=&#34;stack-theme&#34;&gt;Stack-theme&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Stack-theme&lt;/code&gt;是我挑选的一个比较好看的&lt;code&gt;Hugo&lt;/code&gt;主题，也就是目前这个网站的主题。虽然说是&lt;code&gt;Hugo&lt;/code&gt;主题，但是&lt;code&gt;Stack-theme&lt;/code&gt;舍弃了&lt;code&gt;Hugo&lt;/code&gt;默认的配置文件，拥有自己的配置文件&lt;code&gt;config.yaml&lt;/code&gt;，一方面这进一步增强了自由性，而另一方面这个主题的文档没有给的很详细，因此在实际的操作过程中还是遇到了不少的麻烦，不过好在我经验还算是比较丰富，遇到文档中没有说明的地方基本上靠着经验连蒙带猜也就都解决了。说一下这个主题让我比较心仪的一些点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;好看！这个没得说，我在众多的Hugo主题中一眼就选中了它，非常适合博客的样式，还拥有深色和浅色两种模式（PC端左下处切换），颜值这块妥妥地拿下了。&lt;/li&gt;
&lt;li&gt;支持多语言。这个真的是蛮好用的一个功能，这个主题好像一共支持十几种语言，目前我配置了英文和中文。之后我可能也会用英文写一些博客来锻炼一下我的英文写作能力 &lt;del&gt;，当然发出来之前我肯定会用grammarly校正一遍的哈哈哈&lt;/del&gt;。&lt;/li&gt;
&lt;li&gt;功能齐全。基本博客该有的功能都有了，而且在配置上面给了很大的自由度。而且该主题的作者应该是中国人吧，因为它甚至支持嵌入&lt;code&gt;Bilibili&lt;/code&gt;和&lt;code&gt;腾讯视频&lt;/code&gt;的视频，而且支持相册（也就是同一行显示多张图片的功能，这在markdown中是还无法实现的），可以点击本篇博客标题下方的语言切换成英文后查看具体的例子 &lt;del&gt;，我放了两个音乐区视频作为例子，可以去 听听歌呀&lt;/del&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;多语言说明&#34;&gt;多语言说明&lt;/h2&gt;
&lt;p&gt;目前该网站支持&lt;code&gt;中文&lt;/code&gt;和&lt;code&gt;英文&lt;/code&gt;两种语言（默认是中文），语言可以语言按钮进行选择切换，PC端网站的话在左下角，移动端应该是在上方菜单列表中。&lt;/p&gt;
&lt;p&gt;需要注意的是，中文和英文的文章可能有不同，&lt;code&gt;有些文章可能只有中文版本或者只有英文版本，而另一些文章可能既有中文版本又有英文版本&lt;/code&gt;，可以通过切换语言来确认。还有一种方法是对于一篇文章，如果其标题下面有语言切换的选项的话，说明这篇文章是拥有双语版本的。一般来说，我写完一篇博客后，会找时间将它的中/英文翻译版也补上的。&lt;/p&gt;
&lt;h2 id=&#34;功能说明&#34;&gt;功能说明&lt;/h2&gt;
&lt;p&gt;功能栏一般分布在左边（移动端功能栏隐藏在菜单中），以中文模式下为例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;主页&lt;/code&gt;： 点击后回到博客的主页，如果点击头像也能实现同样的效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;关于&lt;/code&gt;： 关于此站点的介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;归档&lt;/code&gt;： 对文章的整理，主要通过categories和日期来对文章进行整理归类。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;搜索&lt;/code&gt;： 很强大的搜索功能，可以搜索本站点中想要的内容。&lt;/p&gt;
&lt;p&gt;注意：中文和英文的搜索不相通，也就是说，中文模式下只能搜索中文的内容，反之亦然。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;链接&lt;/code&gt;： 主要展示了我觉得比较有用的一些网站（有一些可能是我自己做的项目）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;社交&lt;/code&gt;： 分享了我的一些社交帐号，点击头像下方的图标就能前往。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;语言切换&lt;/code&gt;： 切换中英文两种模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;主题切换&lt;/code&gt;： 目前可以切换&lt;code&gt;Dark&lt;/code&gt;和&lt;code&gt;Light&lt;/code&gt;两种模式，默认是&lt;code&gt;Dark&lt;/code&gt;模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在主页右侧会显示一些功能，在文章的右侧会显示该文章的目录（但这个看具体文章，有些文章我可能会关闭其目录）&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
